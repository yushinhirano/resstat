##########################################################################
##########################################################################
###################### ============================ ######################
###################### resstat Tools Version 0.3.0  ######################
###################### ============================ ######################
##########################################################################
##########################################################################


@BRIEF (resstatツールの簡単な使い方)

1. HOW TO Install

2. HOW TO Use (Local Node)

3. HOW TO Use (Multi Node)


######################################################################
# 0. Overview
######################################################################

-----   軽量パフォーマンスモニタツール resstat   -----

パフォーマンス測定ツールのsar、mpstat、iostat、vmstatの起動停止管理、
及びグラフ化を非リアルタイムに行う軽量ツール。

リアルタイムにグラフ化するものではなく、
一定時間内のリソースレポートを後にグラフ画像として残す場合に使用できます。

このファイルでは、簡単にこのツールの起動方法を記述します。
とりあえず使ってみる人向けです。
詳細で正確な説明は、READMEファイルを参照してください。


######################################################################
# 1. HOW TO Install
######################################################################

-- 使用ユーザの作成 --
 monitor
（専用ユーザを作成して実行することをお勧めします）
（ただし、とりあえず単独ノードで使ってみるには、どんなユーザでも構いません）

⇒以下、このファイルでは実行ユーザをmonitorとします。


-- インストール --
  # 展開場所は問いません。
  
  ①．gitから取得する場合
    $ git clone https://github.com/yushinhirano/resstat.git
  
  ②．tarアーカイブから入れる場合
    $ tar xf resstat-X.X.X.tar.bz2

⇒以下、展開先のディレクトリを<RESSTAT_HOME>と表記します。

-- 必要パッケージのインストール --

大体デフォルトで入っていないものを入れます。

RHEL系なら、以下の様にします。

$ yum -y install zsh sysstat gnuplot expect

（expectはなくても動かせます。複数ノード起動時の準備に少し活躍するだけです。詳しくはREADME参照）


######################################################################
# 2. HOW TO Use (Local Node)
######################################################################

ローカルノードのみでパフォーマンスを測定する場合です。

◆対話的管理ツール
  <RESSTAT_HOME>/bin/management_tool.sh
  
  このツールに従って操作することが可能です。
  ツールを起動すれば、特に説明不要です。
  「start」、「stop」、「collect and output」の順に起動してください。
  （途中で色々なオプションの修正が出来ますが、何も必要ありません。
    全てデフォルトのまま[y]と入力します）

  尚、何度も使用してディスクを圧迫してきた場合、「data directory clear」を実行してください。

---------------------------------------------------------------------

◆コマンドラインから実行する場合の起動方法

-- 主要測定コマンド --
<RESSTAT_HOME>/binのctrlresstat.shスクリプトを使用します。

  (■起動ディレクトリ移動
   $ cd <RESSTAT_HOME>/bin)

  ■測定開始

    $ ./ctrlresstat.sh start

  ■起動中のプロセス表示

    $ ./ctrlresstat.sh show

  ■全停止

    $ ./ctrlresstat.sh stop

  ■ログファイルの収集/グラフ化

    $ ./ctrlresstat.sh collect
  
  ⇒<RESSTAT_HOME>/archive以下にファイルが作成される
  
  ■画像ファイル抽出、HTMLファイル作成、zipアーカイブ
  
    $ ./ctrlresstat.sh output
  
  ⇒<RESSTAT_HOME>/archive以下にファイルが作成される。
  
    このスクリプトで作成されたzipファイルを、
    scpなどでローカルにダウンロードして展開し、閲覧してください。
  
  ■データディレクトリクリア
  
    $ ./ctrlresstat.sh clear

      ダンプファイルやアーカイブなどを削除します。
      ディスクを圧迫してきたら使用してください。

-- 測定方法 [例] --

  (0). 準備
  
    $ su - monitor
    $ cd <RESSTAT_HOME>/bin
  
  (1). 開始
    $ ./ctrlresstat.sh start
  
  (2). 終了
    $ ./ctrlresstat.sh stop
    $ ./ctrlresstat.sh collect
    $ ./ctrlresstat.sh output

  (3). archiveディレクトリ内のzipファイルをscpでローカルにコピー


-- コンフィグレーション方法 --

  最大起動時間と、レポート取得間隔を設定します。
  <RESSTAT_HOME>/conf/resstat.confを編集してください。

  TOTAL_MINUTESパラメータに、起動時間（分）を、
  INTERVAL_SECパラメータに、起動間隔（秒）を、
  それぞれ入力して保存します。
  修正しない場合、デフォルトでは1秒間隔で最大二日分取得するようになっています。
  
  詳しくはREADMEを参照してください。



######################################################################
# 3. HOW TO Use (Multi Node)
######################################################################

複数ノードでパフォーマンスを測定する場合です。

-- 条件 --
  ・対象ノードの全てにmonitorユーザが存在する。
  ・対象ノード間のmonitorユーザのssh接続は全てパスワード要求をスキップして行える。
  ・対象ノードのresstatインストールディレクトリが同じである。


-- コンフィグレーション --

  ・対象ノードリスト
    <RESSTAT_HOME>/conf/targethost

    このファイルに測定対象ノードを全て記述します。

  ・その他
    ローカルノード起動時と同様、最大起動時間と、レポート取得間隔を設定します。
    終了後は起動対象ノードの全てにresstatパッケージを配布してください。


- 条件設定ツール - 
  複数ノード起動条件を整えるための簡易ツールがあります。
  <RESSTAT_HOME>/bin/management_tool.shを起動した後、
  「2. 複数ノード一斉起動」を選択し、「7. Monitoring User and SSH auto configure (Special Warning!)」を選択します。
  その後、「1. ユーザ作成」「2. SSH公開鍵配布」「3. resstatツール配布」のメニューを選択すれば、
  条件クリアのための環境設定を行えます。
  
  ただし、テスト環境でしか使用できないセキュリティ無視のツールです。基本は使用しないでください。


---------------------------------------------------------------------


-- 起動方法① --

◆対話的管理ツール
  <RESSTAT_HOME>/bin/management_tool.sh
  
  このツールに従って操作することが可能です。
  複数ノード起動条件を整えた後、「起動ロック」を[unlock]状態にすれば使用可能です。


---------------------------------------------------------------------

-- 起動方法② --

◆コマンドラインから起動

-- 主要測定コマンド --
  <RESSTAT_HOME>/binの下のスクリプトを使用します。
  測定対象ノードにパスワード無のssh接続が可能なノードで行います。

  (■起動ディレクトリ移動。
   $ cd <RESSTAT_HOME>/bin)

  ■測定開始

    $ ./multictrl_resstat.sh start

  ■起動中のプロセス表示

    $ ./multictrl_resstat.sh show

  ■全停止

    $ ./multictrl_resstat.sh stop

  ■ログファイルの収集/グラフ化

    $ ./multictrl_resstat.sh collect <ログ収集先ディレクトリ>
  
    resstatでは、ログ収集先はoutputを推奨しています。
    ../output/test_resstat、という様に入力してください。
    存在しなければ自動作成します。
  
  ■画像ファイル抽出、HTMLファイル作成、zipアーカイブ
  
    $ ./multictrl_resstat.sh output <ログ収集先ディレクトリ>
    （multictrl_resstat.sh collectで指定したディレクトリをここでも指定してください）
  
    ⇒<RESSTAT_HOME>/archive以下にファイルが作成される。
  
    このスクリプトで作成されたzipファイルを、
    scpなどでローカルにダウンロードして展開し、閲覧してください。
  


-- 測定方法 [例] --

  (0). 準備
    $ su - monitor
    $ cd <RESSTAT_HOME>/bin
  
  (1). 開始
    $ ./multictrl_resstat.sh start
  
  (2). 状態確認
    $ ./multictrl_resstat.sh show
  
  (3). 終了
    $ ./multictrl_resstat.sh stop
    $ ./multictrl_resstat.sh collect ../output/test_performance
    $ ./multictrl_resstat.sh output  ../output/test_performance
  
  （../output/test_performanceは一例です）
  
  (4). archiveディレクトリ内のzipファイルをscpでローカルにコピー


-- コンフィグレーション方法 --

  READMEを参照してください。


