#!/usr/bin/env zsh
########################################
# function UsageMsg
########################################
function UsageMsg(){
    cat <<-EOF
    
	Usage : management_tool.sh
	        
	        management_tool.sh [ [34;1m-f node_file[m ]
	        management_tool.sh [ [34;1m-h[m ]
	
	EOF

}

########################################
# function HelpMsg
########################################
function HelpMsg(){
    #PAGERÂ§âÊï∞„ÅÆË®≠ÂÆöÂèñ„ÇäËæº„Åø
    source $(cd ${CURRENT_SCRIPT%/*};pwd)/"common_def.sh"
    export LC_ALL=ja_JP.utf8
    ${=PAGER} <<-EOF
	
	
	[32;1;4m#### resstat package manual ####[m
	
	
	[36;1mUsage: management_tool.sh [m  -- resstatÂØæË©±ÁöÑÁÆ°ÁêÜ„É°„Éã„É•„Éº„ÉÑ„Éº„É´
	
	       management_tool.sh [ [34;1m-f node_file[m ]
	       management_tool.sh [ [34;1m-h[m ]
	
	
	[36;1m[Options] : [m
	
	       [34;1m-f[m : Ë§áÊï∞„Éé„Éº„Éâ‰∏ÄÊñâËµ∑ÂãïÊôÇ„ÅÆËµ∑ÂãïÂØæË±°„Éé„Éº„ÉâË®òËø∞„Éï„Ç°„Ç§„É´„ÇíÊåáÂÆö„Åô„Çã„ÄÇ
	            ÊåáÂÆö„Åó„Å™„ÅÑÂ†¥Âêà„ÄÅ„Éá„Éï„Ç©„É´„Éà„ÅØconf/targethost„ÄÇ

	       [34;1m-h[m : „Éò„É´„Éó
	
	
	[36;1m[Overview] : [m
	
	       resstatÂêÑÊ©üËÉΩ„ÅÆÁÆ°ÁêÜ/ÂÆüË°å„ÇíÂØæË©±ÁöÑ„Å´Ë°å„ÅÜ„ÉÑ„Éº„É´„ÄÇ
	       „É¶„Éº„Ç∂„Å´Ê©üËÉΩ„ÅÆÈÅ∏Êäû„Çí‰øÉ„Åó„ÄÅÂçòÁã¨„Éé„Éº„ÉâËµ∑Âãï„ÅÆÂ†¥Âêà„ÅØ[33;1mbin/ctrlresstat.sh[m„ÄÅ
	       Ë§áÊï∞„Éé„Éº„ÉâËµ∑Âãï„ÅÆÂ†¥Âêà„ÅØ[33;1mbin/multictrl_resstat.sh[m„ÇíÂÆüË°å„Åô„Çã„ÄÇ
	       
	       Ëµ∑ÂãïÊñπÊ≥ï„Å´Èñ¢„Åô„ÇãÊ≥®ÊÑè„ÅØ[33;1mbin/ctrlresstat.sh -h[m„Å®
	       [33;1mbin/multictrl_resstat.sh -h[m„ÇíÂèÇÁÖß„ÄÇ
	       Âü∫Êú¨ÁöÑ„Å´„ÅØ„ÄÅ(configure‚áí)start‚áístop(„Åæ„Åü„ÅØËµ∑ÂãïÊôÇÈñìÁµÇ‰∫Ü)‚áícollectÔºÜoutput„ÅßËâØ„ÅÑ„ÄÇ
	       
	       „Åü„Å†„Åó„ÄÅ„Åì„ÅÆ„ÉÑ„Éº„É´„Çí‰ªã„Åó„Å¶„ÅÆË§áÊï∞„Éé„Éº„ÉâËµ∑Âãï„Å´„ÅØÂà∂Èôê„ÇíÊéõ„Åë„Å¶„ÅÑ„Çã„ÄÇ
	       conf/.multi_conf_on„ÅÆÂÄ§„Çí1„Å´„Åô„Çå„Å∞Ë§áÊï∞„Éé„Éº„ÉâËµ∑Âãï„ÅåÊúâÂäπ„Å´„Å™„Çã„Åå„ÄÅ
	       conf/targethost„Éï„Ç°„Ç§„É´„ÇíË®òËø∞„Åó„Åü„Çä„ÄÅ
	       ÂØæË±°ÂÖ®„Éé„Éº„Éâ„Å´Âêå„Åò„É¶„Éº„Ç∂„Çí‰Ωú„ÇäÂÖ¨ÈñãÈçµ„Çí‰ªã„Åó„ÅüÊé•Á∂ö„ÇíÂèØËÉΩ„Å´„Åô„Çã„ÄÅ
	       „Å®„ÅÑ„Å£„ÅüÊ∫ñÂÇô„ÅåÂøÖË¶Å„Å™„ÅÆ„Åß„ÄÅ„Åù„ÅÆÊ∫ñÂÇô„ÇíË°å„Çè„Åö„Å´Ë§áÊï∞„Éé„Éº„Éâ„ÇíËµ∑Âãï„Åó„Å™„ÅÑÊßò„Å´„Åô„ÇãÈÖçÊÖÆ„Åß„ÅÇ„Çã„ÄÇ
	       
	       Â∞ö„ÄÅ„Åì„Çå„Çâ„ÅÆË§áÊï∞„Éé„Éº„ÉâËµ∑ÂãïÊ∫ñÂÇô‰ΩúÊ•≠„ÅØ„ÄÅ
	       multisetup/bin/„Å´„ÅÇ„ÇãË§áÊï∞„ÅÆ„ÉÑ„Éº„É´„ÇíÂà©Áî®„Åô„Çã„Åì„Å®„Åå„Åß„Åç„Çã„ÄÇ


	[31;1m[Caution] : [m
	
	       [35;1mÔºëÔºéË§áÊï∞„Éé„Éº„ÉâËµ∑Âãï[m
	           ‰∏äËø∞„ÅÆ„Çà„ÅÜ„Å´„ÄÅË§áÊï∞„Éé„Éº„ÉâËµ∑ÂãïÊ∫ñÂÇô„ÇíÊï¥„Åà„Çã„Åæ„Åß„ÅØÊúâÂäπÂåñ„Åó„Å™„ÅÑ„Åì„Å®„ÄÇ
	
	
	[36;1m[Related ConfigFiles] : [m
	        
	        „Éªconf/targethost
	
	
	[36;1m[Author & Copyright] : [m
	        
	        resstat version ${RESSTAT_VERSION}.
	        
	        Author : Written by ${RESSTAT_AUTHOR}.
	        
	        Report bugs to <${RESSTAT_REPORT_TO}>.
	        
	        Release : ${RESSTAT_LASTUPDATE}.
	
	
	EOF

}


########################################
# function ContinueInput
########################################
function ContinueInput(){
    echo -e "\n\n[ Please input ENTER to continue ..... ]\c"
    read
}


########################################
# function ShowLocalResstatProcess
########################################
function ShowLocalResstatProcess(){
    local NOWEXEC_LIST
    NOWEXEC_LIST=$("${CTRLRESSTAT_SH}" show)
    
    echo -e ''
    echo -e '    ========================================='
    echo -e "    == [ ${MYHOST} ] Status"
    echo -e "${NOWEXEC_LIST}" | while read line 
    do
        echo -e "    == ${line}"
    done
    echo -e '    == '
    echo -e '    ========================================='
    echo -e ''
    
}


########################################
# function ShowMultiResstatProcess
########################################
function ShowMultiResstatProcess(){
    # multiËµ∑Âãï„É¢„Éº„Éâ„ÅÆ„É≠„ÉÉ„ÇØ„ÅåÊéõ„Åã„Å£„Å¶„ÅÑ„Çå„Å∞‰Ωï„ÇÇ„Åó„Å™„ÅÑ„ÄÇ
    if [[ "${MULTI_CONFIGURE}" == "${MULTI_OFF}" ]];then
        return ${RET_OK}
    fi

    local NOWEXEC_LIST

    NOWEXEC_LIST=$("${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" show)
    
    echo -e ''
    echo -e '    ========================================='
    echo -e '    == [All Target] Status'
    echo -e '    == '
    echo -e "${NOWEXEC_LIST}" | while read line 
    do
        echo -e "    == ${line}"
    done
    echo -e '    == '
    echo -e '    ========================================='
    echo -e ''
    
}



########################################
# function PrintTargetHost
########################################
function PrintTargetHost(){
    local NODES
    local TOP=0
    
    # ÂÖàÈ†≠#„ÇíÈô§„ÅÑ„Å¶targethost„Éï„Ç°„Ç§„É´„ÇíË™≠„ÅøËæº„Åø
    for NODES in ${${(@f)"$(<${RESSTAT_TG_HOSTS})"}:#[#]*}
    do
        if [[ ${TOP} -eq 0 ]];then
            echo -e "  ----  TARGET  : ${NODES}"
            TOP=1
        else 
            echo -e "  ----          : ${NODES}"
        fi
    done
    
    # TODO ÂØæË±°„Éé„Éº„Éâ„ÅåÂ§ö„ÅÑÂ†¥Âêà„ÄÅ„Åì„ÅÆË®òËø∞„Åß„ÅØ„ÅÑ„Åï„Åï„Åã‰∏ç‰æø„ÄÇ„ÅÇ„ÇãÁ®ãÂ∫¶„ÅÆÊñáÂ≠óÊï∞„Åæ„ÅßÊ®™„Å´‰∏¶„Åπ„Çã„Åì„Å®„ÇíÊ§úË®é„Åô„Çã„ÄÇ
    #      „Éª„Éª„Éª„Å®„ÅÑ„Å£„Å¶„ÇÇÁ´ØÊú´„ÅÆÈï∑„Åï„Çí„ÅÑ„Å°„ÅÑ„Å°Ê∏¨„Å£„Åü„ÇäÁ´ØÊú´Èï∑„ÅïÂ§âÂåñ„ÅÆ„Ç∑„Ç∞„Éä„É´„Éè„É≥„Éâ„É´„ÇÇÈù¢ÂÄí„Å™„ÅÆ„Åß„ÄÅÂÑ™ÂÖàÂ∫¶„ÅØ‰Ωé„ÅÑ„ÄÇ
    #      „Åù„Åì„Åæ„Åß„ÇÑ„Çã„Å™„Çâ„ÇÑ„Å£„Å¶„ÇÇ„ÅÑ„ÅÑ„Åå„ÄÅ„Åù„ÇåË®Ä„ÅÑ„Å†„Åô„Å®ÂÖ®‰Ωì„ÅÆ„É¨„Ç§„Ç¢„Ç¶„Éà„ÇÇÂ§âÊõ¥„Å´„Å™„Çã„ÅÆ„Åß„ÄÅ„Å°„Çá„Å£„Å®„Åç„Çä„ÅåÁÑ°„ÅÑ„ÄÇ
    
}


########################################
# function OpenMainMenu
########################################
function OpenMainMenu(){
    local SELECT_BUFF
    
    while :
    do
        clear
        echo -e ''
        echo -e ''
        echo -e '############################################################'
        echo -e '## '
        echo -e '## resstat tool MainMenu'
        echo -e '## '
        echo -e '##    please select command No.'
        echo -e '## '
        echo -e '############################################################'
        echo -e ''
        echo -e ''
        echo -e '    --  resstat command menu --    '
        echo -e ''
        echo -e '      1. „É≠„Éº„Ç´„É´„Éé„Éº„ÉâÂçòÁã¨Ëµ∑Âãï'
        echo -e '      2. Ë§áÊï∞„Éé„Éº„Éâ‰∏ÄÊñâËµ∑Âãï'
        echo -e ''
        echo -e '      q. QUIT'
        echo -e ''
        echo -e " \$\$\$ input command code. [1-2q] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "1")
                    OpenSingleMenu
                    RETVAL=$?
                    break 1
                    ;;
                "2")
                    OpenMultiMenu
                    RETVAL=$?
                    break 1
                    ;;
                "q")
                    return ${RET_QUIT}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ input command code. [1-2q] >\c"
        done
        if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
            return ${RET_QUIT}
        elif [[ ${RETVAL} -eq ${RET_BACK} ]];then
            continue
        fi
    done
}


##############################################################################################################################
##############################################################################################################################
##############################################################################################################################
##############################################################################################################################
############   
############   
############   ÂçòÁã¨„Éé„Éº„ÉâËµ∑ÂãïCUIÈñ¢Êï∞
############   
############   
##############################################################################################################################
##############################################################################################################################
##############################################################################################################################
##############################################################################################################################


########################################
# function OpenSingleMenu
########################################
function OpenSingleMenu(){
    local SELECT_BUFF
    while :
    do
        clear
        echo -e ''
        echo -e ''
        echo -e '############################################################'
        echo -e '## '
        echo -e '## resstat tool SingleNode Menu'
        echo -e '## '
        echo -e '##    please select command No. '
        echo -e '## '
        echo -e '############################################################'
        echo -e ''
        echo -e ''
        echo -e '    --  resstat „É≠„Éº„Ç´„É´„Éé„Éº„ÉâÂçòÁã¨Ëµ∑Âãï command menu --    '
        echo -e ''
        echo -e '      1. start'
        echo -e '      2. stop'
        echo -e '      3. collect and output'
        echo -e ''
        echo -e '      4. data directory clear'
        echo -e '      5. auto configure for my host'
        echo -e ''
        echo -e '      b. back'
        echo -e '      q. QUIT'
        echo -e ''
        
        ShowLocalResstatProcess
        
        echo -e ""
        echo -e " \$\$\$ input command code [1-5bq] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                # Ê®ôÊ∫ñÂá∫Âäõ„ÅåÂ£ä„Çå„Å¶„ÅÑ„ÇãÔºü\c„ÅÆ„Åõ„ÅÑ„Å†„Çç„ÅÜ„Åã„ÄÇ„Åì„Åì„Åß„ÅØ‰∏ÄÊó¶ÁÑ°ÊÑèÂë≥„Å´echo„Åô„Çã„ÄÇ
                echo -e ''
                
                case "${SELECT_BUFF}" in
                "1")
                    SingleStart
                    RETVAL=$?
                    break 1
                    ;;
                "2")
                    SingleStop
                    RETVAL=$?
                    break 1
                    ;;
                "3")
                    SingleCollectAndOutput
                    RETVAL=$?
                    break 1
                    ;;
                "4")
                    SingleClear
                    RETVAL=$?
                    break 1
                    ;;
                "5")
                    SingleConfigure
                    RETVAL=$?
                    break 1
                    ;;
                "b")
                    return ${RET_BACK}
                    ;;
                "q")
                    return ${RET_QUIT}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ input command code [1-5bq] >\c"
        done
        
        if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
            return ${RETVAL}
        elif [[ ${RETVAL} -eq ${RET_BACK} ]];then
            continue
        fi
        
        # Ê≠£Â∏∏ÁµÇ‰∫Ü„Åó„Å¶„É™„Çø„Éº„É≥„Åó„ÅüÂ†¥Âêà„Å´„ÅØContinueÂâç„Å´‰∏ÄÂëºÂê∏ÁΩÆ„Åè„ÄÇ
        ContinueInput
    done
}

########################################
#
# function SingleStartMenu
#
#    ÂçòÁã¨„Éé„Éº„Éâ  start„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function SingleStart(){
    local SELECT_BUFF
    local DMP_DIR_SUFFIX=""
    
    while :
    do
        clear
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  ----  resstat „É¢„Éã„Çø„É™„É≥„Ç∞ start config  '
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e "      „ÉÄ„É≥„Éó„Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„Çµ„Éï„Ç£„ÉÉ„ÇØ„Çπ [${DMP_DIR_SUFFIX:-default}]"
        echo -e "         „Éá„Éï„Ç©„É´„ÉàÂÄ§   : ${MYHOST}_YYYYMMDD_HH24MISS      :ÁèæÂú®Êó•ÊôÇ„Çí‰Ωø„ÅÑ„Åæ„Åô"
        echo -e "         „Éá„Ç£„É¨„ÇØ„Éà„É™Âêç : ${MYHOST}_${DMP_DIR_SUFFIX:-YYYYMMDD_HH24MISS}"
        echo -e ''
        echo -e "      Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅØ„ÄÅ\n"
        echo -e "         [${DATA_DIR}/${MYHOST}_${DMP_DIR_SUFFIX:-YYYYMMDD_HH24MISS}]"
        echo -e "\n      „Å®„Å™„Çä„Åæ„Åô„ÄÇ"
        echo -e ''
        echo -e '      y. OK'
        echo -e '      m. modify input directory_suffix'
        echo -e '      c. clear  input directory_suffix'
        echo -e ''
        echo -e '      b. back'
        echo -e '      q. QUIT'
        echo -e ''
        echo -e " \$\$\$ please input command code [ymcbq] >\c"
        
        while :
        do
            # zsh„Åß„ÅØ-k
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    break 2
                    ;;
                "m")
                    INPUT_BUFF=""
                    StringInput "please input-directory suffix name"
                    RETVAL=$?
                    if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
                        return ${RETVAL}
                    elif [[ ${RETVAL} -eq ${RET_BACK} ]];then
                        break 1
                    fi
                    DMP_DIR_SUFFIX="${INPUT_BUFF}"
                    break 1
                    ;;
                "c")
                    DMP_DIR_SUFFIX=""
                    echo -e "\n suffix input clear .....\n"
                    break 1
                    ;;
                "b")
                    return ${RET_BACK}
                    ;;
                "q")
                    return ${RET_QUIT}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ please input command code [ymcbq] >\c"
        done
    done
    
    #### start shell execute ####
    
    while :
    do
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ SINGLE NODE resstat input confirm $$ ---------'
        echo -e "  ----  TARGET  : ${MYHOST}"
        echo -e "  ----  COMMAND : start"
        echo -e "  ----  DMPDIR  : ${DATA_DIR}/${MYHOST}_${DMP_DIR_SUFFIX:-YYYYMMDD_HH24MISS}"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    AUTO_CONFIG=$(getParamFromConf AUTO_CONFIG)
                    if [[ -n "${DMP_DIR_SUFFIX}" ]];then
                        "${CTRLRESSTAT_SH}" -d "${DMP_DIR_SUFFIX}" start 
                    else 
                        "${CTRLRESSTAT_SH}" start
                    fi
                    echo -e "\n  executed resstat start ..... \n"
                    
                    # AUTO CONFIGURE„Åß„ÅÆSYSKBNÂ§âÊõ¥„Ç±„Éº„Çπ„ÇíËÄÉÊÖÆ„Åó„ÄÅcommon_def.sh„ÇíÂÜçÂÆöÁæ©„ÄÇ
                    if [[ ${AUTO_CONFIG} == "ON" ]];then
                        source "${BIN_DIR}/common_def.sh"
                    fi
                    
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel resstat start ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}


########################################
#
# function SingleStopMenu
#
#    ÂçòÁã¨„Éé„Éº„Éâ  stop„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function SingleStop(){
    local SELECT_BUFF
    
    #### stop shell execute ####
    
    while :
    do
        clear
        echo -e ''
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ SINGLE NODE resstat input confirm $$ ---------'
        echo -e "  ----  TARGET  : ${MYHOST}"
        echo -e "  ----  COMMAND : stop"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e ''
        ShowLocalResstatProcess

        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    "${CTRLRESSTAT_SH}" stop
                    echo -e "\n  executed resstat stop ..... \n"
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel resstat stop ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}


########################################
#
# function SingleCollectAndOutput
#
#    ÂçòÁã¨„Éé„Éº„Éâ  „Ç∞„É©„ÉïÂá∫ÂäõÈñ¢ÈÄ£„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function SingleCollectAndOutput(){

    local SELECT_BUFF
    local DMP_DIR_GRAPH=""
    local OUTPUT_DIR_GRAPH=""
    local COLLECT_TDIR_SUFFIX=""
    
    ## TODO ÊúÄÊñ∞„Éá„Ç£„É¨„ÇØ„Éà„É™„ÄÅ„Åß„ÅØ„Å™„Åè„ÄÅ„Åç„Å£„Å°„Çäls„ÅßË™ø„Åπ„Å¶Âá∫Âäõ„ÄÇ
    
    ## TODO Â§âÊõ¥ÊôÇ„ÄÅdata„Éá„Ç£„É¨„ÇØ„Éà„É™ÂÜÖ„ÅÆ„Éá„Ç£„É¨„ÇØ„Éà„É™„Çí„É™„Çπ„Éà„Åó„Å¶„ÄÅÁï™Âè∑„Åß„Å©„ÅÆ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅãÈÅ∏„Å∞„Åõ„ÇãÊ©üËÉΩ„ÇíÊåÅ„Åü„Åõ„Çã„ÄÇÔºà„Åù„Åì„Åæ„Åß„Åô„Çã„ÅãÔºüÊòî„ÇÑ„Å£„Åü„ÅåÂÆüË£ÖÈù¢ÂÄí„ÅßË™∞„ÇÇ‰Ωø„Çè„Å™„Åã„Å£„Åü„Åå‚Ä¶Ôºâ
    
    while :
    do
        clear
        echo -e ''
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  ----  resstat „É™„ÇΩ„Éº„Çπ„Ç∞„É©„ÉïÂåñ  config '
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e "      „Ç∞„É©„ÉïÂåñÂØæË±°„Éá„Ç£„É¨„ÇØ„Éà„É™ : ${DATA_DIR}/$( if [[ -n "${COLLECT_TDIR_SUFFIX}" ]];then echo "${MYHOST}_${COLLECT_TDIR_SUFFIX}" ;else echo '<ÊúÄÊñ∞„Éá„Ç£„É¨„ÇØ„Éà„É™>' ;fi )"
        echo -e "        „Ç∞„É©„ÉïÂåñÂØæË±°„Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„Çµ„Éï„Ç£„ÉÉ„ÇØ„Çπ  : [${COLLECT_TDIR_SUFFIX:-default}]"
        echo -e "        „Éá„Éï„Ç©„É´„ÉàÂÄ§                            : ${DATA_DIR}/<ÊúÄÊñ∞„Éá„Ç£„É¨„ÇØ„Éà„É™>"
        echo -e '        Ôºà‚Äª„Çµ„Éï„Ç£„ÉÉ„ÇØ„Çπ„ÇíÊåáÂÆö„Åô„ÇãÂ†¥Âêà„ÅØstartÊôÇ„Å´ÊåáÂÆö„Åó„Åü„ÇÇ„ÅÆ„Å®Âêå„Åò„ÇÇ„ÅÆ„Çí‰Ωø„Å£„Å¶„Åè„Å†„Åï„ÅÑÔºâ'
        echo -e ""
        echo -e "      Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™„Éë„Çπ [${OUTPUT_DIR_GRAPH:-default}]"
        echo -e "         „Éá„Éï„Ç©„É´„ÉàÂÄ§      : ${ARCHIVE_DIR}/"
        echo -e "         Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™  : ${OUTPUT_DIR_GRAPH:-${ARCHIVE_DIR}/}"
        echo -e ''
        echo -e '      y. OK'
        echo -e '      s. modify collect directory suffix'
        echo -e '      r. clear collect directory suffix'
        echo -e '      m. modify output directory path'
        echo -e '      c. clear  output directory path'
        echo -e ''
        echo -e '      b. back'
        echo -e '      q. QUIT'
        echo -e ''
        echo -e " \$\$\$ please input command code [ysrmcbq] >\c"
        
        while :
        do
            # zsh„Åß„ÅØ-k
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    break 2
                    ;;
                "s")
                    INPUT_BUFF=""
                    StringInput "please input collect_directory suffix"
                    RETVAL=$?
                    if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
                        return ${RETVAL}
                    elif [[ ${RETVAL} -eq ${RET_BACK} ]];then
                        break 1
                    fi
                    COLLECT_TDIR_SUFFIX="${INPUT_BUFF}"
                    break 1
                    ;;
                "r")
                    COLLECT_TDIR_SUFFIX=""
                    echo -e "\n collect_directory suffix clear .....\n"
                    break 1
                    ;;
                "m")
                    INPUT_BUFF=""
                    StringInput "please input dest_directory path (absolute)"
                    RETVAL=$?
                    if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
                        return ${RETVAL}
                    elif [[ ${RETVAL} -eq ${RET_BACK} ]];then
                        break 1
                    fi
                    OUTPUT_DIR_GRAPH="${INPUT_BUFF}"
                    break 1
                    ;;
                "c")
                    OUTPUT_DIR_GRAPH=""
                    echo -e "\n input directory name clear .....\n"
                    break 1
                    ;;
                "b")
                    return ${RET_BACK}
                    ;;
                "q")
                    return ${RET_QUIT}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ please input command code [ysrmcbq] >\c"
        done
    done
    
    #### collect and output shell execute ####
    
    ## TODO ÊúÄÊñ∞„Éá„Ç£„É¨„ÇØ„Éà„É™„ÄÅ„Åß„ÅØ„Å™„Åè„ÄÅ„Åç„Å£„Å°„Çäls„ÅßË™ø„Åπ„Å¶Âá∫Âäõ„ÄÇ
    
    while :
    do
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ SINGLE NODE resstat input confirm $$ ---------'
        echo -e "  ----  TARGET      : ${MYHOST}"
        echo -e "  ----  COMMAND     : collect and output"
        echo -e "  ----  COLLECT_DIR : ${DATA_DIR}/$( if [[ -n "${COLLECT_TDIR_SUFFIX}" ]];then echo "${MYHOST}_${COLLECT_TDIR_SUFFIX}" ;else echo '<ÊúÄÊñ∞„Éá„Ç£„É¨„ÇØ„Éà„É™>' ;fi )"
        echo -e "  ----  OUTPUTDIR   : ${OUTPUT_DIR_GRAPH:-${ARCHIVE_DIR}/}"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    if [[ -n "${OUTPUT_DIR_GRAPH}" ]];then
                        if [[ -n "${COLLECT_TDIR_SUFFIX}" ]];then
                            "${CTRLRESSTAT_SH}" -d "${COLLECT_TDIR_SUFFIX}" collect
                        else
                            "${CTRLRESSTAT_SH}" collect
                        fi
                        "${CTRLRESSTAT_SH}" -d "${OUTPUT_DIR_GRAPH}" output
                        # -fÊåáÂÆö„Åó„Å™„Åè„Å®„ÇÇoutputÂØæË±°„ÅØÊúÄÊñ∞„ÅßOKÔºü
                        # "${CTRLRESSTAT_SH}" -d "${OUTPUT_DIR_GRAPH}" -f "${ARCHIVE_DIR}/${OUTPUT_DIR_PREFIX}_$(uname -n)_${COLLECT_TDIR_SUFFIX}.tbz2" output
                    else 
                        if [[ -n "${COLLECT_TDIR_SUFFIX}" ]];then
                            "${CTRLRESSTAT_SH}" -d "${COLLECT_TDIR_SUFFIX}" collect
                        else
                            "${CTRLRESSTAT_SH}" collect
                        fi
                        "${CTRLRESSTAT_SH}" output
                    fi

                    echo -e ''
                    echo -e "\n  executed resstat collect and output ..... \n"
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel resstat collect and output ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done



}


########################################
#
# function SingleClear
#
#    ÂçòÁã¨„Éé„Éº„Éâ  clear„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function SingleClear(){

    local SELECT_BUFF
    
    #### clear script execute ####
    
    while :
    do
        clear
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ SINGLE NODE resstat input confirm $$ ---------'
        echo -e "  ----  TARGET  : ${MYHOST}"
        echo -e "  ----  COMMAND : clear"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e ''
        echo -e '    data, archive, output, proc_idÈ†òÂüü„Çí„ÇØ„É™„Ç¢„Åó„Åæ„Åô„ÄÇ'
        echo -e ''
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    "${CTRLRESSTAT_SH}" clear
                    echo -e "\n  executed clear ..... \n"
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e "\n  cancel clear ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}



########################################
#
# function SingleConfigure
#
#    ÂçòÁã¨„Éé„Éº„Éâ  configure„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function SingleConfigure(){

    local SELECT_BUFF
    
    #### configure script execute ####
    
    while :
    do
        clear
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e "  --------- \$\$ SINGLE NODE resstat input confirm \$\$ ---------"
        echo -e "  ----  TARGET  : ${MYHOST}"
        echo -e "  ----  COMMAND : configure"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e ''
        echo -e '    „Åì„ÅÆ„Éû„Ç∑„É≥„ÅÆsysstat„ÄÅprocs„Éë„ÉÉ„Ç±„Éº„Ç∏„Éê„Éº„Ç∏„Éß„É≥„Å´Âøú„Åò„ÅüSYSKBN„ÅÆË™øÊï¥„ÄÅ'
        echo -e '    Ë®àÊ∏¨ÂØæË±°CPU„Ç≥„Ç¢„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç§„É≥„Çø„Éï„Çß„Éº„Çπ„ÄÅ„Éñ„É≠„ÉÉ„ÇØ„Éá„Éê„Ç§„Çπ„ÅÆËá™ÂãïË®≠ÂÆö„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ'
        echo -e ''
        echo -e '    Â∞ö„ÄÅconf/resstat.conf„Éï„Ç°„Ç§„É´„ÅÆAUTO_CONFIG„Éë„É©„É°„Éº„Çø„ÇíON„Å´„Åó„Å¶„Åä„Åë„Å∞„ÄÅ'
        echo -e '    „Åì„ÅÆ„Éë„ÉÉ„Ç±„Éº„Ç∏„ÅÆÂàùÂõûstartËµ∑ÂãïÊôÇ„Å´„ÄÅËá™ÂãïÁöÑ„Å´„Åì„ÅÆÂá¶ÁêÜ„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ'
        echo -e ''
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    "${CTRLRESSTAT_SH}" configure
                    echo -e "\n  executed configure ..... \n"
                    # SYSKBNÂ§âÊõ¥„ÅÆÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„ÅÆ„Åß„ÄÅÂÖ±ÈÄöÂ§âÊï∞„ÇíÂÜçÂÆöÁæ©„Åô„Çã„ÄÇ
                    source "${BIN_DIR}/common_def.sh"
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel configure ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}


##############################################################################################################################
##############################################################################################################################
##############################################################################################################################
##############################################################################################################################
############   
############   
############   Ë§áÊï∞„Éé„Éº„ÉâËµ∑ÂãïCUIÈñ¢Êï∞
############   
############   
##############################################################################################################################
##############################################################################################################################
##############################################################################################################################
##############################################################################################################################


########################################
# function OpenMultiMenu
########################################
function OpenMultiMenu(){
    local SELECT_BUFF
    while :
    do
        clear
        echo -e ''
        echo -e ''
        echo -e '############################################################'
        echo -e '## '
        echo -e '## resstat tool MultiNode Menu'
        echo -e '## '
        echo -e '##    please select command No. '
        echo -e '## '
        echo -e '############################################################'
        echo -e ''
        echo -e ''
        echo -e '    --  resstat Ë§áÊï∞„Éé„Éº„Éâ‰∏ÄÊñâËµ∑Âãï command menu --    '
        echo -e ''
        echo -e '      1. start'
        echo -e '      2. stop'
        echo -e '      3. collect and output'
        echo -e ''
        echo -e '      4. data directory clear'
        echo -e '      5. auto configure for my host'
        echo -e '      6. All and config files sync'
        echo -e ''
        echo -e '      7. Monitoring User and SSH auto configure (Special Warning!)'
        echo -e ''
        echo -e '      b. back'
        echo -e '      q. QUIT'
        echo -e ''
        echo -e '      $$  Ë§áÊï∞„Éé„Éº„Éâ‰∏ÄÊñâËµ∑Âãï„É≠„ÉÉ„ÇØÔºàËµ∑ÂãïÊù°‰ª∂„ÇíÊ∫Ä„Åü„Åó„Å¶„Åã„ÇâËß£Èô§„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºâ  $$'
        echo -e '      $$  Status Ôºö'$(if [[ "${MULTI_CONFIGURE}" == "${MULTI_OFF}" ]] ;then ;echo -e 'Lock' ; else ; echo -e 'UnLock' ; fi )
        echo -e ''
        echo -e '      o. MultiNode Lock | Mode: Lock'
        echo -e '      u. MultiNode Lock | Mode: UnLock'
        echo -e ''
        ShowMultiResstatProcess
        echo -e ''
        echo -e " \$\$\$ input command code [1-7oubq] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                # Ê®ôÊ∫ñÂá∫Âäõ„ÅåÂ£ä„Çå„Å¶„ÅÑ„ÇãÔºü\c„ÅÆ„Åõ„ÅÑ„Å†„Çç„ÅÜ„Åã„ÄÇ„Åì„Åì„Åß„ÅØ‰∏ÄÊó¶ÁÑ°ÊÑèÂë≥„Å´echo„Åô„Çã„ÄÇ
                echo -e ''
                
                case "${SELECT_BUFF}" in
                "1")
                    MultiStart
                    RETVAL=$?
                    break 1
                    ;;
                "2")
                    MultiStop
                    RETVAL=$?
                    break 1
                    ;;
                "3")
                    MultiCollectAndOutput
                    RETVAL=$?
                    break 1
                    ;;
                "4")
                    MultiClear
                    RETVAL=$?
                    break 1
                    ;;
                "5")
                    MultiConfigure
                    RETVAL=$?
                    break 1
                    ;;
                "6")
                    MultiSync
                    RETVAL=$?
                    break 1
                    ;;
                "7")
                    echo -e "\nmultinode setup ÁÆ°ÁêÜ„ÉÑ„Éº„É´„Å∏ÁßªË°å„Åó„Åæ„Åô ...... [ENTER]\c"
                    read
                    "${MULTINODE_SETUP_SH}" -f "${NODEFILE}"
                    RETVAL=$?
                    break 1
                    ;;
                "o")
                    echo -e "${MULTI_OFF}" > ${MULTI_FLG_FILE}
                    RET_CODE=$?
                    if [[ ${RET_CODE} -ne ${RET_OK} ]];then
                        echo -e "\nMulti Execute Mode Change Miss \n"
                    else 
                        MULTI_CONFIGURE="${MULTI_OFF}"
                        echo -e "\nChange Complete : Multi Execute Mode  | Lock\n"
                    fi
                    break 1
                    ;;
                "u")
                    echo -e "${MULTI_ON}" > ${MULTI_FLG_FILE}
                    RET_CODE=$?
                    if [[ ${RET_CODE} -ne ${RET_OK} ]];then
                        echo -e "\nMulti Execute Mode Change Miss \n"
                    else 
                        MULTI_CONFIGURE="${MULTI_ON}"
                        echo -e "\nChange Complete : Multi Execute Mode  | UnLock\n"
                    fi
                    break 1
                    ;;
                "b")
                    return ${RET_BACK}
                    ;;
                "q")
                    return ${RET_QUIT}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ input command code [1-7oubq] >\c"
        done
        
        if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
            return ${RETVAL}
        elif [[ ${RETVAL} -eq ${RET_BACK} ]];then
            continue
        fi
        
        # Ê≠£Â∏∏ÁµÇ‰∫Ü„Åó„Å¶„É™„Çø„Éº„É≥„Åó„ÅüÂ†¥Âêà„Å´„ÅØContinueÂâç„Å´‰∏ÄÂëºÂê∏ÁΩÆ„Åè„ÄÇ
        ContinueInput

    done
}



########################################
#
# function MultiStart
#
#    Ë§áÊï∞„Éé„Éº„Éâ  start„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function MultiStart(){
    local SELECT_BUFF
    local DMP_DIR_SUFFIX=""
    
    if [[ "${MULTI_CONFIGURE}" == "${MULTI_OFF}" ]];then
        echo -e '\n  ##---- Ë§áÊï∞„Éé„Éº„ÉâÂêåÊôÇËµ∑Âãï„ÅØLock‰∏≠„Åß„Åô„ÄÇËµ∑ÂãïÊù°‰ª∂„ÇíÊ∫Ä„Åü„Åó„ÅüÂæå„ÄÅËß£Èô§„Åó„Å¶ÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n'
        return ${RET_OK}
    fi

    while :
    do
        clear
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  ----  resstat „É¢„Éã„Çø„É™„É≥„Ç∞ start config  '
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e "      „ÉÄ„É≥„Éó„Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„Çµ„Éï„Ç£„ÉÉ„ÇØ„Çπ [${DMP_DIR_SUFFIX:-default}]"
        echo -e "         „Éá„Éï„Ç©„É´„ÉàÂÄ§   : [ÂØæË±°„Éõ„Çπ„ÉàÂêç]_YYYYMMDD_HH24MISS      :ÁèæÂú®Êó•ÊôÇ„Çí‰Ωø„ÅÑ„Åæ„Åô"
        echo -e "         „Éá„Ç£„É¨„ÇØ„Éà„É™Âêç : [ÂØæË±°„Éõ„Çπ„ÉàÂêç]_${DMP_DIR_SUFFIX:-YYYYMMDD_HH24MISS}"
        echo -e ''
        echo -e "      Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™„ÅØ„ÄÅ\n"
        echo -e "         [${DATA_DIR}/[ÂØæË±°„Éõ„Çπ„ÉàÂêç]_${DMP_DIR_SUFFIX:-YYYYMMDD_HH24MISS}]"
        echo -e "\n      „Å®„Å™„Çä„Åæ„Åô„ÄÇ"
        echo -e ''
        echo -e '      y. OK'
        echo -e '      m. modify input directory_suffix'
        echo -e '      c. clear  input directory_suffix'
        echo -e ''
        echo -e '      b. back'
        echo -e '      q. QUIT'
        echo -e ''
        echo -e " \$\$\$ please input command code [ymcbq] >\c"
        
        while :
        do
            # zsh„Åß„ÅØ-k
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    break 2
                    ;;
                "m")
                    INPUT_BUFF=""
                    StringInput "please input-directory suffix name"
                    RETVAL=$?
                    if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
                        return ${RETVAL}
                    elif [[ ${RETVAL} -eq ${RET_BACK} ]];then
                        break 1
                    fi
                    DMP_DIR_SUFFIX="${INPUT_BUFF}"
                    break 1
                    ;;
                "c")
                    DMP_DIR_SUFFIX=""
                    echo -e "\n suffix input clear .....\n"
                    break 1
                    ;;
                "b")
                    return ${RET_BACK}
                    ;;
                "q")
                    return ${RET_QUIT}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ please input command code [ymcbq] >\c"
        done
    done
    
    #### start shell execute ####
    
    while :
    do
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ MULTI NODE resstat input confirm $$ ---------'
        PrintTargetHost
        echo -e "  ----  COMMAND : start"
        echo -e "  ----  DMPDIR  : ${DATA_DIR}/[ÂØæË±°„Éõ„Çπ„ÉàÂêç]_${DMP_DIR_SUFFIX:-YYYYMMDD_HH24MISS}"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    AUTO_CONFIG=$(getParamFromConf AUTO_CONFIG)
                    if [[ -n "${DMP_DIR_SUFFIX}" ]];then
                        "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" -d "${DMP_DIR_SUFFIX}" start
                    else 
                        "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" start
                    fi
                    echo -e "\n  executed resstat start ..... \n"
                    
                    # AUTO CONFIGURE„Åß„ÅÆSYSKBNÂ§âÊõ¥„Ç±„Éº„Çπ„ÇíËÄÉÊÖÆ„Åó„ÄÅcommon_def.sh„ÇíÂÜçÂÆöÁæ©„ÄÇ
                    if [[ ${AUTO_CONFIG} == "ON" ]];then
                        source "${BIN_DIR}/common_def.sh"
                    fi
                    
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel resstat start ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}


########################################
#
# function MultiStop
#
#    Ë§áÊï∞„Éé„Éº„Éâ  stop„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function MultiStop(){
    local SELECT_BUFF
    
    if [[ "${MULTI_CONFIGURE}" == "${MULTI_OFF}" ]];then
        echo -e '\n  ##---- Ë§áÊï∞„Éé„Éº„ÉâÂêåÊôÇËµ∑Âãï„ÅØLock‰∏≠„Åß„Åô„ÄÇËµ∑ÂãïÊù°‰ª∂„ÇíÊ∫Ä„Åü„Åó„ÅüÂæå„ÄÅËß£Èô§„Åó„Å¶ÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n'
        return ${RET_OK}
    fi

    
    #### stop shell execute ####
    
    while :
    do
        clear
        echo -e ''
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ MULTI NODE resstat input confirm $$ ---------'
        PrintTargetHost
        echo -e "  ----  COMMAND : stop"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e ''
        ShowMultiResstatProcess
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" stop
                    echo -e "\n  executed resstat stop ..... \n"
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel resstat stop ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}


########################################
#
# function MultiCollectAndOutput
#
#    Ë§áÊï∞„Éé„Éº„Éâ  „Ç∞„É©„ÉïÂá∫ÂäõÈñ¢ÈÄ£„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function MultiCollectAndOutput(){

    if [[ "${MULTI_CONFIGURE}" == "${MULTI_OFF}" ]];then
        echo -e '\n  ##---- Ë§áÊï∞„Éé„Éº„ÉâÂêåÊôÇËµ∑Âãï„ÅØLock‰∏≠„Åß„Åô„ÄÇËµ∑ÂãïÊù°‰ª∂„ÇíÊ∫Ä„Åü„Åó„ÅüÂæå„ÄÅËß£Èô§„Åó„Å¶ÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n'
        return ${RET_OK}
    fi

    local SELECT_BUFF
    local OUTPUT_DIR_GRAPH=""
    local ALLNODE_COLLECTDIR=""
    local COLLECT_TDIR_SUFFIX=""
    
    ## TODO SingleÁâà„Å®„ÅØÈÅï„ÅÑ„ÄÅ„Åì„Å°„Çâ„ÅØ„Éé„Éº„Éâ„ÅåË§áÊï∞„Å´Âèä„Å∂„Åü„ÇÅdataÂÜÖ„ÅÆ„É™„Çπ„ÉÜ„Ç£„É≥„Ç∞„ÅØ„Åª„Åº‰∏çÂèØËÉΩ„ÄÇ
    
    while :
    do
        clear
        echo -e ''
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  ----  resstat „É™„ÇΩ„Éº„ÇπÂèéÈõÜÂèä„Å≥„Ç∞„É©„ÉïÂåñ  config '
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e "      ÂèéÈõÜÂØæË±°„Éá„Ç£„É¨„ÇØ„Éà„É™ : ${DATA_DIR}/$( if [[ -n "${COLLECT_TDIR_SUFFIX}" ]];then echo '<„Éõ„Çπ„ÉàÂêç>_'${COLLECT_TDIR_SUFFIX} ;else echo '<ÊúÄÊñ∞„Éá„Ç£„É¨„ÇØ„Éà„É™>' ;fi )"
        echo -e "        ÂèéÈõÜÂØæË±°„Éá„Ç£„É¨„ÇØ„Éà„É™Âêç„Çµ„Éï„Ç£„ÉÉ„ÇØ„Çπ  : [${COLLECT_TDIR_SUFFIX:-default}]"
        echo -e "        „Éá„Éï„Ç©„É´„ÉàÂÄ§                        : ${DATA_DIR}/<ÊúÄÊñ∞„Éá„Ç£„É¨„ÇØ„Éà„É™>"
        echo -e '        Ôºà‚Äª„Çµ„Éï„Ç£„ÉÉ„ÇØ„Çπ„ÇíÊåáÂÆö„Åô„ÇãÂ†¥Âêà„ÅØstartÊôÇ„Å´ÊåáÂÆö„Åó„Åü„ÇÇ„ÅÆ„Å®Âêå„Åò„ÇÇ„ÅÆ„Çí‰Ωø„Å£„Å¶„Åè„Å†„Åï„ÅÑÔºâ'
        echo -e ''
        echo -e "      Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™„Éë„Çπ [${OUTPUT_DIR_GRAPH:-default}]"
        echo -e "         „Éá„Éï„Ç©„É´„ÉàÂÄ§      : ${ARCHIVE_DIR}/"
        echo -e "         Âá∫Âäõ„Éá„Ç£„É¨„ÇØ„Éà„É™  : ${OUTPUT_DIR_GRAPH:-${ARCHIVE_DIR}/}"
        echo -e ''
        echo -e '      y. OK'
        echo -e '      s. modify collect directory suffix'
        echo -e '      r. clear collect directory suffix'
        echo -e '      m. modify output directory path'
        echo -e '      c. clear  output directory path'
        echo -e ''
        echo -e '      b. back'
        echo -e '      q. QUIT'
        echo -e ''
        echo -e " \$\$\$ please input command code [ysrmcbq] >\c"
        
        while :
        do
            # zsh„Åß„ÅØ-k
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    break 2
                    ;;
                "s")
                    INPUT_BUFF=""
                    StringInput "please input collect_directory suffix"
                    RETVAL=$?
                    if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
                        return ${RETVAL}
                    elif [[ ${RETVAL} -eq ${RET_BACK} ]];then
                        break 1
                    fi
                    COLLECT_TDIR_SUFFIX="${INPUT_BUFF}"
                    break 1
                    ;;
                "r")
                    COLLECT_TDIR_SUFFIX=""
                    echo -e "\n collect_directory suffix clear .....\n"
                    break 1
                    ;;
                "m")
                    INPUT_BUFF=""
                    StringInput "please input dest_directory path (absolute)"
                    RETVAL=$?
                    if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
                        return ${RETVAL}
                    elif [[ ${RETVAL} -eq ${RET_BACK} ]];then
                        break 1
                    fi
                    OUTPUT_DIR_GRAPH="${INPUT_BUFF}"
                    break 1
                    ;;
                "c")
                    OUTPUT_DIR_GRAPH=""
                    echo -e "\n input directory name clear .....\n"
                    break 1
                    ;;
                "b")
                    return ${RET_BACK}
                    ;;
                "q")
                    return ${RET_QUIT}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ please input command code [ysrmcbq] >\c"
        done
    done
    
    #### collect and output shell execute ####
    
    while :
    do
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ MULTI NODE resstat input confirm $$ ---------'
        PrintTargetHost
        echo -e "  ----  COMMAND     : collect and output"
        echo -e "  ----  COLLECT_DIR : ${DATA_DIR}/$( if [[ -n "${COLLECT_TDIR_SUFFIX}" ]];then echo '<„Éõ„Çπ„ÉàÂêç>_'${COLLECT_TDIR_SUFFIX} ;else echo '<ÊúÄÊñ∞„Éá„Ç£„É¨„ÇØ„Éà„É™>' ;fi )"
        echo -e "  ----  OUTPUTDIR   : ${OUTPUT_DIR_GRAPH:-${ARCHIVE_DIR}/}"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    # Êú¨Êó•Êó•‰ªò
                    TODAYS_DATE=$(date "+%Y%m%d_%H%M%S")
                    # ÂèéÈõÜÂÖà„ÅÆÊåáÂÆö
                    while :
                    do
                        if [[ -e "${ALLNODE_OUTPUT_DIR}/${TODAYS_DATE}" ]];then
                            TODAYS_DATE=$(date "+%Y%m%d_%H%M%S")
                        else 
                            mkdir -p ${ALLNODE_COLLECTDIR::="${ALLNODE_OUTPUT_DIR}/${TODAYS_DATE}"}
                            break 1
                        fi
                    done
                    echo -e ''
                    echo -e "\n  ##---- data collect to : [${ALLNODE_COLLECTDIR}]\n"
                    
                    if [[ -n "${OUTPUT_DIR_GRAPH}" ]];then
                        if [[ -n "${COLLECT_TDIR_SUFFIX}" ]];then
                            "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" -d "${COLLECT_TDIR_SUFFIX}" collect "${ALLNODE_COLLECTDIR}"
                        else
                            "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" collect "${ALLNODE_COLLECTDIR}"
                        fi
                        "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" -d "${OUTPUT_DIR_GRAPH}" output "${ALLNODE_COLLECTDIR}"
                    else 
                        if [[ -n "${COLLECT_TDIR_SUFFIX}" ]];then
                            "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" -d "${COLLECT_TDIR_SUFFIX}" collect "${ALLNODE_COLLECTDIR}"
                        else
                            "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" collect "${ALLNODE_COLLECTDIR}"
                        fi
                        "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" output "${ALLNODE_COLLECTDIR}"
                    fi
                    echo -e "\n  executed resstat collect and output ..... \n"
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel resstat collect and output ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}


########################################
#
# function MultiClear
#
#    Ë§áÊï∞„Éé„Éº„Éâ  clear„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function MultiClear(){

    if [[ "${MULTI_CONFIGURE}" == "${MULTI_OFF}" ]];then
        echo -e '\n  ##---- Ë§áÊï∞„Éé„Éº„ÉâÂêåÊôÇËµ∑Âãï„ÅØLock‰∏≠„Åß„Åô„ÄÇËµ∑ÂãïÊù°‰ª∂„ÇíÊ∫Ä„Åü„Åó„ÅüÂæå„ÄÅËß£Èô§„Åó„Å¶ÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n'
        return ${RET_OK}
    fi

    local SELECT_BUFF
    
    #### clear script execute ####
    
    while :
    do
        clear
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ MULTI NODE resstat input confirm $$ ---------'
        PrintTargetHost
        echo -e "  ----  COMMAND : clear"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e ''
        echo -e '    data, archive, output, proc_idÈ†òÂüü„Çí„ÇØ„É™„Ç¢„Åó„Åæ„Åô„ÄÇ'
        echo -e ''
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" clear
                    echo -e "\n  executed clear ..... \n"
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel clear ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}



########################################
#
# function MultiConfigure
#
#    Ë§áÊï∞„Éé„Éº„Éâ  configure„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function MultiConfigure(){

    if [[ "${MULTI_CONFIGURE}" == "${MULTI_OFF}" ]];then
        echo -e '\n  ##---- Ë§áÊï∞„Éé„Éº„ÉâÂêåÊôÇËµ∑Âãï„ÅØLock‰∏≠„Åß„Åô„ÄÇËµ∑ÂãïÊù°‰ª∂„ÇíÊ∫Ä„Åü„Åó„ÅüÂæå„ÄÅËß£Èô§„Åó„Å¶ÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n'
        return ${RET_OK}
    fi

    local SELECT_BUFF
    
    #### configure script execute ####
    
    while :
    do
        clear
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ MULTI NODE resstat input confirm $$ ---------'
        PrintTargetHost
        echo -e "  ----  COMMAND : configure"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e ''
        echo -e '    ÂÖ®„Å¶„ÅÆ„Éû„Ç∑„É≥„ÅÆsysstat„ÄÅprocs„Éë„ÉÉ„Ç±„Éº„Ç∏„Éê„Éº„Ç∏„Éß„É≥„Å´Âøú„Åò„ÅüSYSKBN„ÅÆË™øÊï¥„ÄÅ'
        echo -e '    Ë®àÊ∏¨ÂØæË±°CPU„Ç≥„Ç¢„ÄÅ„Éç„ÉÉ„Éà„ÉØ„Éº„ÇØ„Ç§„É≥„Çø„Éï„Çß„Éº„Çπ„ÄÅ„Éñ„É≠„ÉÉ„ÇØ„Éá„Éê„Ç§„Çπ„ÅÆËá™ÂãïË®≠ÂÆö„ÇíË°å„ÅÑ„Åæ„Åô„ÄÇ'
        echo -e ''
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" configure
                    echo -e "\n  executed configure ..... \n"
                    # SYSKBNÂ§âÊõ¥„ÅÆÂèØËÉΩÊÄß„Åå„ÅÇ„Çã„ÅÆ„Åß„ÄÅÂÖ±ÈÄöÂ§âÊï∞„ÇíÂÜçÂÆöÁæ©„Åô„Çã„ÄÇ
                    source "${BIN_DIR}/common_def.sh"
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel configure ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}


########################################
#
# function MultiSync
#
#    Ë§áÊï∞„Éé„Éº„Éâ  „Ç≥„É≥„Éï„Ç£„Ç∞„Éï„Ç°„Ç§„É´ÂêåÊúü„É°„Ç§„É≥Âá¶ÁêÜ
#
########################################
function MultiSync(){

    if [[ "${MULTI_CONFIGURE}" == "${MULTI_OFF}" ]];then
        echo -e '\n  ##---- Ë§áÊï∞„Éé„Éº„ÉâÂêåÊôÇËµ∑Âãï„ÅØLock‰∏≠„Åß„Åô„ÄÇËµ∑ÂãïÊù°‰ª∂„ÇíÊ∫Ä„Åü„Åó„ÅüÂæå„ÄÅËß£Èô§„Åó„Å¶ÂÆüË°å„Åó„Å¶„Åè„Å†„Åï„ÅÑ„ÄÇ\n'
        return ${RET_OK}
    fi

    local SELECT_BUFF
    
    #### configure script execute ####
    
    while :
    do
        clear
        echo -e "\n"
        echo -e ''
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e '  --------- $$ MULTI NODE resstat input confirm $$ ---------'
        PrintTargetHost
        echo -e "  ----  COMMAND : sync"
        echo -e '  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%'
        echo -e ''
        echo -e ''
        echo -e '    confÂèä„Å≥conf/'"${SYSKBN}"'„Éá„Ç£„É¨„ÇØ„Éà„É™ÂÜÖ„ÅÆÂÖ®„Éï„Ç°„Ç§„É´„Çí„ÄÅ'
        echo -e '    Ëµ∑ÂãïÂØæË±°ÂêÑ„Éé„Éº„Éâ„Å´ÂêåÊúü„Åó„Åæ„Åô„ÄÇ'
        echo -e ''
        echo -e ''
        echo -e " \$\$\$ above command take OK ? [yn] >\c"
        
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    echo -e ''
                    "${MULTICTRL_RESSTAT_SH}" -f "${NODEFILE}" sync
                    echo -e "\n  executed sync ..... \n"
                    return ${RET_OK}
                    ;;
                "n")
                    echo -e ''
                    echo -e "\n  cancel sync ..... \n"
                    return ${RET_OK}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
                
            fi
            echo -e " \$\$\$ above command take OK ? [yn] >\c"
        done
    done

}

########################################
# 
# function StringInput
# 
#    ÊñáÂ≠óÂàóÂÖ•Âäõ„Çí„É¶„Éº„Ç∂„Å´‰øÉ„Åó„ÄÅ„Åù„ÅÆÁµêÊûú„Çí
#    „Åì„ÅÆ„Çπ„ÇØ„É™„Éó„ÉàÂÜÖ„ÅÆ„Çπ„Çø„ÉÜ„Ç£„ÉÉ„ÇØ„Å™Â§âÊï∞„ÄåINPUT_BUFF„Äç„Å´Ê†ºÁ¥ç„Åó„Å¶Ëøî„Åô„ÄÇ
#
#    Á¨¨‰∏ÄÂºïÊï∞„ÅØÊñáÂ≠óÂàóÂÖ•Âäõ„Çí‰øÉ„ÅôÂâç„Å´echo„Åô„ÇãË™òÂ∞éÊñáÂ≠óÂàó„ÄÇ
#
########################################
function StringInput(){
    local ECHO_MESSAGE="$1"
    local SELECT_BUFF
    
    while :
    do
        clear
        echo -e "\n"
        echo -e ''
        echo -e ''
        echo -e '    ==============================================='
        echo -e '    ========  $$ input String and Enter $$ ========'
        echo -e '    ==============================================='
        echo -e ''
        echo -e " \$\$\$ ${ECHO_MESSAGE} >\c"
        
        
        while :
        do
            read SELECT_BUFF
            if [[ -n "${SELECT_BUFF}" ]];then
                INPUT_BUFF="${SELECT_BUFF}"
                break
            fi
            echo -e " \$\$\$ ${ECHO_MESSAGE} >\c"
        done
        
        echo -e "\n"
        echo -e ''
        echo -e '    ================================='
        echo -e '    ========  input confirm  ========'
        echo -e '    ================================='
        echo -e ''
        echo -e "      input  value [${INPUT_BUFF}]"
        echo -e ''
        echo -e '      y. OK'
        echo -e '      n. No and RE:input'
        echo -e ''
        echo -e '      b. back and input cancel'
        echo -e '      q. QUIT'
        echo -e ''

        echo -e " \$\$\$ above input OK ? [ynbq] >\c"
    
        while :
        do
            read -k 1 SELECT_BUFF
            if [[ -n "${${(@f)SELECT_BUFF}:# }"  ]];then
                case "${SELECT_BUFF}" in
                "y")
                    return ${RET_OK}
                    ;;
                "n")
                    INPUT_BUFF=""
                    break 1
                    ;;
                "b")
                    INPUT_BUFF=""
                    return ${RET_BACK}
                    ;;
                "q")
                    INPUT_BUFF=""
                    return ${RET_QUIT}
                    ;;
                *)
                    echo -e "\nplease input correct code\n"
                    ;;
                esac
            fi
            echo -e " \$\$\$ above input OK ? [ynbq] >\c"
        done

    done


}


########################################
#
# toolcui.sh
# (zsh„Çπ„ÇØ„É™„Éó„Éà)
# ÈÄî‰∏≠„Åß„Ç≠„É¨„Å¶zshÁâπÊúâÊ©üËÉΩ„Çí‰Ωø„Å£„Å¶„Åæ„Åô„ÄÇ
# „Å™„Åú„Å™„Çâ„ÄÅbash„Å®zsh„Åßread„ÅÆ„Ç™„Éó„Ç∑„Éß„É≥Âêç„ÅåÂ§â„Çè„Å£„Å¶„Åó„Åæ„ÅÑ„ÄÅ„ÇÇ„ÅØ„ÇÑ‰∫íÊèõÊÄß„Çí‰øù„Å¶„Å™„Åè„Å™„Å£„Åü„Åü„ÇÅ„ÄÇ
# (dd„Ç≥„Éû„É≥„Éâ„Å®termÂà∂Âæ°„Çí‰Ωø„Åà„Å∞Âá∫Êù•„Å™„Åè„ÇÇ„Å™„ÅÑ„Åå„ÄÅbsh„Åò„ÇÉ„ÅÇ„Çã„Åæ„ÅÑ„ÅóÊ†ºÂ•ΩÊÇ™„ÅÑ„ÅÆ„ÅßÂç¥‰∏ã)
#
# [Ê¶ÇË¶Å]
#    resstat„ÉÑ„Éº„É´ÂØæË©±ÁöÑ„É¶„Éº„Ç∂„Ç§„É≥„Çø„Éï„Çß„Éº„Çπ
# [Ëµ∑ÂãïÊù°‰ª∂„ÄÅ‰ªïÊßò]
# [ÂºïÊï∞]
#    UsageMsg()„ÄÅHelpMsg()ÂèÇÁÖß„ÄÇ

#
########################################

#Èùû„Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞

#Èùû„Ç∑„Ç∞„Éä„É´„Éè„É≥„Éâ„É™„É≥„Ç∞

#„Çπ„ÇØ„É™„Éó„ÉàÂÆüË°åÂêçÈÄÄÈÅø
CURRENT_SCRIPT="$0"

########################################
# „Ç™„Éó„Ç∑„Éß„É≥/ÂºïÊï∞Ë®≠ÂÆö
########################################
# „Ç≥„Éû„É≥„Éâ„É©„Ç§„É≥„Ç™„Éó„Ç∑„Éß„É≥„ÉÅ„Çß„ÉÉ„ÇØ
while getopts :f:h ARG
do
    case "${ARG}" in
        f)
          # „Éé„Éº„ÉâË®òËø∞„Éï„Ç°„Ç§„É´
          NODEFILE="${OPTARG}"
        ;;
        h)
          HelpMsg
          exit 0
        ;;
        \?)
          # Ëß£ÊûêÂ§±ÊïóÊôÇ„Å´‰∏é„Åà„Çâ„Çå„Çã„ÅÆ„ÅØ„Äå?„Äç„ÄÇ
          UsageMsg
          exit 4
        ;;
    esac
done

shift $(( OPTIND - 1 ))


########################################

# Â§âÊï∞ÂÆöÁæ©

#ÂÖ±ÈÄö„ÅÆÂ§âÊï∞„ÅåÊú™Âèñ„ÇäËæº„Åø„Å™„ÇâÂèñ„ÇäËæº„ÇÄ
if [[ -z "${COMMON_DEF_ON}" ]];then
    #„Çπ„ÇØ„É™„Éó„ÉàÊ†ºÁ¥ç„Éá„Ç£„É¨„ÇØ„Éà„É™(Áµ∂ÂØæ„Éë„Çπ)
    BIN_PWD=($(cd ${0%/*};pwd))
    export BIN_DIR=${BIN_PWD}
    COMMON_DEF="common_def.sh"
    source ${BIN_DIR}/${COMMON_DEF}
fi

#ÂÖ±ÈÄöÈñ¢Êï∞„Çπ„ÇØ„É™„Éó„Éà„ÅÆÂèñ„ÇäËæº„ÅøÔºàÂÖ®„Çπ„ÇØ„É™„Éó„ÉàÂÖ±ÈÄöÔºâ
COMMON_SCRIPT="common.sh"
source ${BIN_DIR}/${COMMON_SCRIPT}

# ÂÆüË°åÊó•‰ªòÂèñÂæó
TODAYS_DATE=$(date "+%Y%m%d_%H%M%S")

# Ëµ∑Âãï„Éé„Éº„ÉâÂèñÂæó
MYHOST=$(uname -n)


# „Éé„Éº„ÉâË®òËø∞„Éï„Ç°„Ç§„É´Ë®≠ÂÆö„ÄÇ
if [[ -z "${NODEFILE}" ]];then
    # „Ç™„Éó„Ç∑„Éß„É≥ÊåáÂÆö„Åï„Çå„Å¶„ÅÑ„Å™„ÅÑÂ†¥Âêà„ÄÅ„Éá„Éï„Ç©„É´„ÉàÂÄ§„ÇíÂèñ„ÇäËæº„ÇÄ„ÄÇ
    NODEFILE="${RESSTAT_TG_HOSTS}"
fi


# QUIT
RET_QUIT=99
# BACK
RET_BACK=98

RET_OK=0

# ÊñáÂ≠óÂàóÂÖ•ÂäõÈñ¢Êï∞Áî®staticÂ§âÊï∞
typeset -g INPUT_BUFF

# Ëµ∑ÂãïÂå∫ÂàÜ
# ÂçòÁã¨„Éé„Éº„ÉâËµ∑Âãï
TARGET_SINGLE=1
# Ë§áÊï∞„Éé„Éº„Éâ‰∏ÄÊñâËµ∑Âãï
TARGET_MULTI=2



# Ë§áÊï∞Ëµ∑Âãï„Ç≥„É≥„Éï„Ç£„Ç∞ÂÆå‰∫Ü„Éï„É©„Ç∞Ë®≠ÂÆö
MULTI_OFF=0
MULTI_ON=1
MULTI_FLG_FILE="${CONF_DIR}/.multi_conf_on"

MULTI_CONFIGURE=$(cat ${MULTI_FLG_FILE})

#Ëµ∑Âãï„É°„Éã„É•„ÉºÂëº„Å≥Âá∫„Åó

unset TARGET_KBN
OpenMainMenu
RETVAL=$?
if [[ ${RETVAL} -eq ${RET_QUIT} ]];then
    echo -e "\n"
    echo -e ""
    echo -e "bye.\n"
fi

exit 0

